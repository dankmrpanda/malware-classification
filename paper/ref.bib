%Introduction---------------------------------------------------------------------------------------------------------------------
@misc{johanna-2024,
	author = {Johanna},
	month = {4},
	title = {{The history of malware - Advenica}},
	year = {2024},
	url = {https://advenica.com/learning-center/blog/the-history-of-malware/},
}
@misc{i2,
	month = {7},
	title = {{The future of ransomware: Inside Cisco Talos threat hunters}},
	year = {2024},
	url = {https://www.cisco.com/site/us/en/learn/topics/security/what-is-malware.html},
        author = {Unknown}
}

@misc{i3,
	title = {{What is a Zero-Day Exploit? | IBM}},
	url = {https://www.ibm.com/topics/zero-day},
        author = {Unknown}
}

@misc{i4,
	title = {{Static Code Analysis | OWASP Foundation}},
	url = {https://owasp.org/www-community/controls/Static\_Code\_Analysis},
        author = {Unknown}
}

@misc{i5,
	title = {{What is Signature-Based Detection? | Corelight}},
	url = {https://corelight.com/resources/glossary/signature-based-detection},
        author = {Unknown}
}

@misc{i6,
	title = {{What are Convolutional Neural Networks? | IBM}},
	url = {https://www.ibm.com/topics/convolutional-neural-networks},
        author = {Unknown}
}

%Related Works--------------------------------------------------------------------------------------------------------------------

@article{ALOMARI2023763,
title = {A Comparative Analysis of Machine Learning Algorithms for Android Malware Detection},
journal = {Procedia Computer Science},
volume = {220},
pages = {763-768},
year = {2023},
note = {The 14th International Conference on Ambient Systems, Networks and Technologies Networks (ANT) and The 6th International Conference on Emerging Data and Industry 4.0 (EDI40)},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2023.03.101},
url = {https://www.sciencedirect.com/science/article/pii/S1877050923006361},
author = {Hani AlOmari and Qussai M. Yaseen and Mohammed Azmi Al-Betar},
keywords = {Malware, Machine Learning, Android, Information Security},
abstract = {The immense growth of Android mobile malware threats has pushed cybersecurity researchers to develop efficient systems that can detect new Android malware. In spite of the academic and industrial attempts to establish a robust, reliable, and efficient solution for Android, malware classification is considered an open problem with many challenges. This paper sheds light on the performance of several machine learning algorithms and analyzes their efficiency in detecting android malware. Moreover, it applies Synthetic Minority Oversampling Technique (SMOTE), normalizes the numerical features and PCA to reach the maximum accuracy. Furthermore, the paper develops a Light Gradient Boosting Model to identify Android malware and classify their families into five classes: Adware, Banking Malware, SMS Malware, Mobile Riskware, and Benign. The paper uses a large and recent dataset, which consists of 11,598 APK collected from several sources and provided by the Canadian Institute of Cybersecurity.}
}

@article{Wajid_Ahmed_Chaudhry_2024, title={A Comprehensive Review of Machine Learning-Based Malware Detection Techniques for Windows Platform}, volume={61}, url={http://thenucleuspak.org.pk/index.php/Nucleus/article/view/1349}, abstractNote={&amp;lt;p&amp;gt;The growing threat of windows malware poses an increasing risk to the security of computers and the sensitive information they hold. The exponential rise in malware threats targeting the windows platform necessitates robust and adaptive detection mechanisms. Machine learning (ML) techniques demonstrate effectiveness in identifying windows malware therefore, a thorough analysis of these techniques is essential. This paper presents a comprehensive review of machine learning based techniques which have been proposed by research community for detecting windows malware. The review begins by providing a comparison of this study with the existing reviews. Then, we provide details of different ML based malware detection techniques. These techniques have been assessed on multiple parameters including: dataset used for training and testing, availability of dataset, ML model used for classification, the type of extracted features, analysis type and the metrics employed to measure the effectiveness of technique. Furthermore, the paper highlights the limitations and challenges in this field and suggests potential future research directions. By providing a comprehensive overview and critical analysis of ML-based malware detection techniques proposed for the windows environment, this study aims to guide and inspire further research in handling evolving cyber threats.&amp;lt;/p&amp;gt;}, number={1}, journal={The Nucleus}, author={Wajid, Amna and Ahmed, Tauqir and Chaudhry, Uroosa Bilal}, year={2024}, month={May}, pages={51–62} }

@article{Anderson2018EMBERAO,
  title={EMBER: An Open Dataset for Training Static PE Malware Machine Learning Models},
  author={H. Anderson and Phil Roth},
  journal={ArXiv},
  year={2018},
  volume={abs/1804.04637},
  url={https://api.semanticscholar.org/CorpusID:4888440}
}

@article{MANIRIHO2024111921,
title = {A systematic literature review on Windows malware detection: Techniques, research issues, and future directions},
journal = {Journal of Systems and Software},
volume = {209},
pages = {111921},
year = {2024},
issn = {0164-1212},
doi = {https://doi.org/10.1016/j.jss.2023.111921},
url = {https://www.sciencedirect.com/science/article/pii/S0164121223003163},
author = {Pascal Maniriho and Abdun Naser Mahmood and Mohammad Jabed Morshed Chowdhury},
keywords = {Malware analysis, Malware detection, Malware dataset, Windows malware, Machine learning, Deep learning},
abstract = {The aim of this systematic literature review (SLR) is to provide a comprehensive overview of the current state of Windows malware detection techniques, research issues, and future directions. The SLR was conducted by analyzing scientific literature on Windows malware detection based on executable files (.EXE file format) published between 2009 and 2022. The study presents new insights into the categorization of malware detection techniques based on datasets, features, machine learning and deep learning algorithms. It identifies ten experimental biases that could impact the performance of malware detection techniques. We provide insights on performance evaluation metrics and discuss several research issues that impede the effectiveness of existing techniques. The study also provides recommendations for future research directions and is a valuable resource for researchers and practitioners working in the field of Windows malware detection.}
}

%Methodology----------------------------------------------------------------------------------------------------------------------
@misc{m1,
	title = {{Papers with Code - Malimg Dataset}},
	url = {https://paperswithcode.com/dataset/malimg},
        author = {Unknown}
}

@misc{krishnamurthy-2024,
	author = {Krishnamurthy, Bharath},
	month = {2},
	title = {{An introduction to the RELU activation function}},
	year = {2024},
	url = {https://builtin.com/machine-learning/relu-activation-function},
}

@misc{wood-2020,
	author = {Wood, Thomas},
	month = {6},
	title = {{Softmax Function}},
	year = {2020},
	url = {https://deepai.org/machine-learning-glossary-and-terms/softmax-layer},
}

@misc{m4,
	title = {{What is Overfitting? | IBM}},
	url = {https://www.ibm.com/topics/overfitting},
        author = {Unknown}
}

@misc{m5,
	title = {{What is underfitting? | IBM}},
	url = {https://www.ibm.com/topics/underfitting},
        author = {Unknown}
}

%Evaluation-----------------------------------------------------------------------------------------------------------------------
@article{aim-2021,
	author = {Aïm, Nathan},
	month = {12},
	title = {{Mathematics behind ROC-AUC  - Data Science | Machine Learning | by Nathan Aïm | Analytics Vidhya}},
	year = {2021},
	url = {https://medium.com/analytics-vidhya/mathematics-behind-roc-auc-interpretation-e4e6f202a015},
        journal = {NA}
}